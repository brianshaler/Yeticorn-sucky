// Generated by CoffeeScript 1.4.0
(function() {
  var Backbone, Crystal, Crystals, Player,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Backbone = require('./backbone');

  Crystal = require('models/crystal_card');

  Crystals = require('models/crystals');

  module.exports = Player = (function(_super) {

    __extends(Player, _super);

    function Player() {
      return Player.__super__.constructor.apply(this, arguments);
    }

    Player.prototype.initialize = function(name) {
      this.name = name;
      this.life = 100;
      this.hand = [];
      this.crystals = new Crystals();
      this.weapons = [];
      this.spells = [];
      return this.crystals.crystals[Math.floor(Math.random() * 5)].push(new Crystal({
        name: 'Crystal'
      }));
    };

    Player.prototype.addCardToHand = function(card) {
      return this.hand.push(card);
    };

    return Player;

  })(Backbone.Model);

}).call(this);

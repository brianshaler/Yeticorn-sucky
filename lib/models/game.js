// Generated by CoffeeScript 1.4.0
(function() {
  var Backbone, Game, Tile,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Backbone = require('./backbone');

  Tile = require('./tile');

  module.exports = Game = (function(_super) {

    __extends(Game, _super);

    function Game() {
      return Game.__super__.constructor.apply(this, arguments);
    }

    Game.prototype.defaults = {
      gameId: '',
      tiles: []
    };

    Game.prototype.initialize = function(attributes, options) {
      var obj, tile, _i, _len, _ref, _results;
      this.socket = options.socket;
      _ref = attributes.tiles;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        obj = _ref[_i];
        tile = new Tile();
        tile.positionX = obj.positionX;
        tile.positionY = obj.positionY;
        if (obj.card) {
          tile.card = obj.card;
        }
        if (obj.player) {
          _results.push(tile.player = obj.player);
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    return Game;

  })(Backbone.Model);

}).call(this);
